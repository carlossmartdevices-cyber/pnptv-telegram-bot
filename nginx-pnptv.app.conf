# Nginx Configuration for PNPtv Bot
# Domain: pnptv.app
# Location: /etc/nginx/sites-available/pnptv-bot
#
# Setup Instructions:
#   1. Copy this file to /etc/nginx/sites-available/pnptv-bot
#   2. Create symbolic link: sudo ln -s /etc/nginx/sites-available/pnptv-bot /etc/nginx/sites-enabled/
#   3. Test configuration: sudo nginx -t
#   4. Reload Nginx: sudo systemctl reload nginx
#
# For SSL (HTTPS):
#   Run: sudo certbot --nginx -d pnptv.app -d www.pnptv.app

# Rate limiting zones (add to /etc/nginx/nginx.conf in http block)
# limit_req_zone $binary_remote_addr zone=webhook_limit:10m rate=5r/s;
# limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
# limit_req_zone $binary_remote_addr zone=general_limit:10m rate=20r/s;
# limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

# Redirect www to non-www
server {
    listen 80;
    listen [::]:80;
    server_name www.pnptv.app;
    return 301 https://pnptv.app$request_uri;
}

# Main server block
server {
    # Listen on port 80 (HTTP)
    listen 80;
    listen [::]:80;

    # Listen on port 443 (HTTPS) - Will be auto-configured by Certbot
    # listen 443 ssl http2;
    # listen [::]:443 ssl http2;

    # Server name
    server_name pnptv.app;

    # SSL Configuration (Let's Encrypt - will be auto-configured by Certbot)
    # ssl_certificate /etc/letsencrypt/live/pnptv.app/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/pnptv.app/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Telegram Mini App requires these headers
    add_header Access-Control-Allow-Origin "https://web.telegram.org" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;

    # Maximum file upload size (for profile photos)
    client_max_body_size 10M;

    # Buffer settings
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;

    # Timeouts
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 65s;
    send_timeout 60s;

    # Logging
    access_log /var/log/nginx/pnptv-access.log;
    error_log /var/log/nginx/pnptv-error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/json application/javascript application/xml image/svg+xml;
    gzip_disable "msie6";

    # Root location - Proxy to Node.js application
    location / {
        # Proxy to Node.js application on port 3000
        proxy_pass http://localhost:3000;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;

        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;

        # Proxy timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Health check endpoint (no caching)
    location /health {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        access_log off;
    }

    # Webhook endpoints (critical - no caching or buffering)
    location ~* ^/(epayco|daimo)/(webhook|confirmation|response) {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # No buffering for webhooks (immediate processing)
        proxy_buffering off;
        proxy_request_buffering off;

        # Increase timeout for webhook processing
        proxy_read_timeout 120s;

        # Rate limiting for webhooks
        limit_req zone=webhook_limit burst=10 nodelay;
    }

    # API endpoints
    location /api/ {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # API rate limiting
        limit_req zone=api_limit burst=20 nodelay;
    }

    # Payment page
    location /pay {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static files (if any) - with caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://localhost:3000;
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Let's Encrypt ACME challenge
    location ~ /.well-known/acme-challenge {
        allow all;
        root /var/www/html;
    }

    # Security: Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security: Deny access to sensitive files
    location ~* \.(env|json|log|conf|key|pem|crt)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
}
